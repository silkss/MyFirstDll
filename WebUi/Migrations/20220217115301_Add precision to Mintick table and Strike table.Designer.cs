// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebUi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220217115301_Add precision to Mintick table and Strike table")]
    partial class AddprecisiontoMinticktableandStriketable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Connectors.Models.Instruments.Future", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Echange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstumentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastTradeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketRule")
                        .HasColumnType("int");

                    b.Property<decimal>("MinTick")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Future");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Future");
                });

            modelBuilder.Entity("Connectors.Models.Instruments.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Echange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FutureId")
                        .HasColumnType("int");

                    b.Property<int>("InstumentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastTradeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketRule")
                        .HasColumnType("int");

                    b.Property<decimal>("MinTick")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<int>("OptionType")
                        .HasColumnType("int");

                    b.Property<decimal>("Strike")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradingClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FutureId");

                    b.ToTable("Option");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Option");
                });

            modelBuilder.Entity("DataLayer.Models.Instruments.DbFuture", b =>
                {
                    b.HasBaseType("Connectors.Models.Instruments.Future");

                    b.HasDiscriminator().HasValue("DbFuture");
                });

            modelBuilder.Entity("DataLayer.Models.Instruments.DbOption", b =>
                {
                    b.HasBaseType("Connectors.Models.Instruments.Option");

                    b.HasDiscriminator().HasValue("DbOption");
                });

            modelBuilder.Entity("Connectors.Models.Instruments.Option", b =>
                {
                    b.HasOne("Connectors.Models.Instruments.Future", "Future")
                        .WithMany("Options")
                        .HasForeignKey("FutureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Future");
                });

            modelBuilder.Entity("Connectors.Models.Instruments.Future", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
